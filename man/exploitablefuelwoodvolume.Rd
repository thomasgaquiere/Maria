% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/exploitablefuelwoodvolume.R
\name{exploitablefuelwoodvolume}
\alias{exploitablefuelwoodvolume}
\title{Compute the exploitable fuel wood volume}
\usage{
exploitablefuelwoodvolume(
  inventory,
  scenario,
  fuel = NULL,
  TimberLoggedVolume,
  NoHollowTimberLoggedVolume,
  advancedloggingparameters = loggingparameters()
)
}
\arguments{
\item{inventory}{Input inventory (see the inputs formats and metadata in the
\code{\link{vignette}}) (data.frame)}

\item{scenario}{Logging scenario: "RIL1", "RIL2broken", "RIL2", "RIL3",
"RIL3fuel", "RIL3fuelhollow" or "manual"(character) (see the
\code{\link{vignette}})}

\item{fuel}{Fuel wood exploitation: no exploitation = "0", exploitation of
damage and unused part of logged trees for fuel = "1", exploitation of
hollow trees, damage and and unused part of the log for fuel = "2"}

\item{TimberLoggedVolume}{All the logged volume (in m^3) (numeric)}

\item{NoHollowTimberLoggedVolume}{The healthy logged volume (in m^3)
(numeric)}

\item{advancedloggingparameters}{Other parameters of the logging simulator
\code{\link{loggingparameters}} (list)}
}
\value{
A list with the damage volume, and the fuel wood volume when fuel
wood exploitation is chosen.
}
\description{
Compute the exploitable fuel wood volume
}
\details{
By default, within a hollow tree, 2/3 of the log will be usable as
timber, 1/3 as fuel wood ('TreeHollowPartForFuel'). For dead trees from the
operation (trails, secondary windfall), the whole trunk will be exploitable
as fuel wood.
}
\examples{
data(Paracou6_2016)
data(DTMParacou)
data(PlotSlope)
data(MainTrails)
data(HarvestablePolygons)

pol1 <- list(matrix(c(286503, 583134,
                      286503, 583240,
                      286507, 583240,
                      286507, 583134,
                      286503, 583134) # the return
                   ,ncol=2, byrow=TRUE))
pol2 <- list(matrix(c(286650, 583134,
                      286650, 583240,
                      286654, 583240,
                      286654, 583134,
                      286650, 583134) # the return
                   ,ncol=2, byrow=TRUE))

PolList = list(pol1,pol2) #list of lists of numeric matrices
MainTrail <- ScndTrail <- sf::st_multipolygon(PolList)

inventory <- addtreedim(inventorycheckformat(Paracou6_2016),
volumeparameters = ForestZoneVolumeParametersTable)

inventory <- suppressMessages(treeselection(inventory, objective = 20, scenario ="manual",
 fuel = "2", diversification = TRUE, specieslax = FALSE, maintrails = MainTrails,
 harvestablepolygons = HarvestablePolygons,
 objectivelax = TRUE, topography = DTMParacou, plotslope = PlotSlope,
 speciescriteria = SpeciesCriteria,
 advancedloggingparameters = loggingparameters())$inventory)

if (!("DeathCause" \%in\% names(inventory))){
  inventory <- inventory \%>\%
    add_column(DeathCause = NA) # if "DeathCause" column doesnt exist create it
}
inventory$DeathCause[1] <- "maintrail"
inventory$DeathCause[2] <- "2ndtrail"
inventory$DeathCause[3] <- "treefall2nd"
inventory$DeathCause[4] <- "landing"

TimberV <- timberharvestedvolume(inventory, scenario = "manual", fuel = "2",
advancedloggingparameters = loggingparameters())

TimberLoggedVolume <- TimberV$TimberLoggedVolume
NoHollowTimberLoggedVolume <- TimberV$NoHollowTimberLoggedVolume

exploitablefuelwoodvolume(inventory, scenario = "manual", fuel = "2",
TimberLoggedVolume = TimberLoggedVolume, NoHollowTimberLoggedVolume = NoHollowTimberLoggedVolume,
advancedloggingparameters = loggingparameters())

}
