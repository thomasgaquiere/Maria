% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/treeselection.R
\name{treeselection}
\alias{treeselection}
\title{Tree selection (trees to be exploited, future and reserve trees)}
\usage{
treeselection(
  inventory,
  topography,
  plotslope,
  speciescriteria,
  scenario,
  objective = NULL,
  fuel = NULL,
  diversification = NULL,
  specieslax = FALSE,
  objectivelax = FALSE,
  advancedloggingparameters = loggingparameters()
)
}
\arguments{
\item{inventory}{input inventory (see the inputs formats and metadata in the
\code{\link{vignette}}) (data.frame)}

\item{topography}{Digital terrain model (DTM) of the inventoried plot (LiDAR
or SRTM) (\code{\link{DTMParacou}}) (RasterLayer)}

\item{plotslope}{Slopes (in radians) of the inventoried plot (with a
neighbourhood of 8 cells) (default: \code{\link{PlotSlope}}) (RasterLayer)}

\item{speciescriteria}{Table of species exploitability criteria : species
names, economic interest level, minimum and maximum felling diameter, in the
same format as \code{\link{SpeciesCriteria}} (data.frame)}

\item{scenario}{Logging scenario: "RIL1", "RIL2broken", "RIL2", "RIL3",
"RIL3fuel", "RIL3fuelhollow" or "manual"(character) (see the
\code{\link{vignette}})}

\item{objective}{Objective volume (m^3/ha) (numeric)}

\item{fuel}{Fuel wood exploitation: no exploitation = "0", exploitation of
damage and unused part of logged trees for fuel = "1", exploitation of
hollow trees, damage and and unused part of the log for fuel = "2"}

\item{diversification}{Possibility to log other species in addition to the
main commercial species (species with a value of 2 for commercial in the
\code{\link{SpeciesCriteria}} table) (logical)}

\item{specieslax}{Allow diversification if the stand is too poor to reach the
objective volume without diversification, = FALSE by
default (logical)}

\item{objectivelax}{Allow exploitation in case of non-achievement of the
objective volume (if stand too poor), = FALSE by default (logical)}

\item{advancedloggingparameters}{Other parameters of the logging simulator
\code{\link{loggingparameters}} (list)}
}
\value{
A list with:
\itemize{
\item input inventory with new columns:
\itemize{
\item The exploitability criteria ("DistCrit", "Slope" (in radians), "SlopeCrit"), and if
they are validated for each of the trees ("LoggingStatus").
\item The probability of a tree having visible defects ("VisibleDefectProba")
and the visible defect trees ("VisibleDefect").
\item The trees selected for harvesting ("Selected"), if the Minimum
Felling Diameter (MinFD) of their species has been raised ("Up").
The cumulative harvestable volume of harvestable trees("VolumeCumSum").
\item The probability of a tree being probed hollow ("ProbedHollowProba")
and the probed hollow trees ("ProbedHollow").
\item Future and reserve trees (LoggingStatus = "future"/"reserve")
(see the outputs metadata in the \code{\link{vignette}})
}
\item the objective volume (VO) for the entire plot
\item the harvestable volume with the initial
criteria (HVinit) for the entire plot
\item 6 layers of spatial points: harvestable, selected, future and
reserve, hollow and fuel wood trees
}
}
\description{
Tree selection (trees to be exploited, future and reserve trees)
}
\details{
Trees will be designated as "\strong{harvestable}" if they:
\itemize{
\item belong to species of 1st economic level (if no diversification) or 1st and
2nd level if (diversification)
\item have a DBH between MinFD and MaxFD.
\item not isolated ( >100m ('IsolateTreeMinDistance' in
\code{\link{loggingparameters}})) from other individuals of the same
species in the aggregative species case (\code{\link{SpeciesCriteria}},
'Aggregative' column).
\item on slopes < 22\% ('TreeMaxSlope'in \code{\link{loggingparameters}})
\item off the main trails.
}

Trees with visible defects are identified ('VisiblyDefectModel' in
'advancedloggingparameters' argument) among the trees with harvestable
criteria and are therefore considered 'non-harvestable'.

If fuel = 2, the hollow trees (identified with the "RottenModel"
(\code{\link{loggingparameters}})) will be harvested and are therefore
included in the objective volume. If fuel = 0 or 1, the hollow trees will
not be exploited, so the function looks for other trees to reach the
objective volume (if possible).

If the harvestable volume is higher than the objective volume, MinFD of
the 1st economic rank species is increased. If this is not enough and if
diversification is allowed, MinFD of 2nd economic level species is increased.
Then, the trees to be harvested are chosen in decreasing order
of volume, until the objective volume is reached.

If the harvestable volume is lower than the objective volume, diversification
can be applied if it
was not already applied ('specieslax') (trees of all commercial ranks are
selected in decreasing order of volume until the objective volume is
reached), or harvesting can continue despite an unreached objective volume,
or be abandoned ('objectivelax')

\strong{Future} trees are all trees satisfying the following conditions:
\itemize{
\item species of 1st economic rank
\item DBH between 35cm (default) ('FutureTreesMinDiameter') and the species MinFD
or UpMinFD if it has been raised for its species.
}

\strong{Reserve} trees are randomly chosen among future trees so that
the number of reserve trees is equal to the number of harvested trees.
}
\examples{
data(Paracou6_2016)
data(DTMParacou)
data(PlotSlope)

inventory <- addtreedim(inventorycheckformat(Paracou6_2016),
volumeparameters = ForestZoneVolumeParametersTable)

treeselectionoutputs <- treeselection(inventory,
topography = DTMParacou, plotslope = PlotSlope,
speciescriteria = SpeciesCriteria, objective = 20,
scenario ="manual", fuel = "2", diversification = TRUE, specieslax = FALSE,
objectivelax = TRUE,
advancedloggingparameters = loggingparameters())

NewInventory <- treeselectionoutputs$inventory

NonHarvestable <- sf::st_as_sf(
dplyr::filter(NewInventory, LoggingStatus == "non-harvestable"),
coords = c("Xutm", "Yutm"))

Harvestable <- sf::st_as_sf(
dplyr::filter(NewInventory, LoggingStatus == "harvestable"),
coords = c("Xutm", "Yutm"))

HarvestableUp <- sf::st_as_sf(
dplyr::filter(NewInventory, LoggingStatus == "harvestableUp"),
coords = c("Xutm", "Yutm"))

Selected <- sf::st_as_sf(
dplyr::filter(NewInventory, Selected == "1"), coords = c("Xutm", "Yutm"))

Reserve <- sf::st_as_sf(
dplyr::filter(NewInventory, LoggingStatus == "reserve"),
coords = c("Xutm", "Yutm"))

Future <- sf::st_as_sf(
dplyr::filter(NewInventory, LoggingStatus == "future"),
coords = c("Xutm", "Yutm"))

ProbedHollow <- sf::st_as_sf(
dplyr::filter(NewInventory, ProbedHollow == "1"), coords = c("Xutm", "Yutm"))

VisibleDefect <- sf::st_as_sf(
dplyr::filter(NewInventory, VisibleDefect == "1"), coords = c("Xutm", "Yutm"))

library(ggplot2)
ggplot() +
  geom_sf(data = NonHarvestable,
  aes(colour = "Non-harvestable"), show.legend = "point") +
  geom_sf(data = VisibleDefect,
  aes(colour = "Visible defect"), show.legend = "point") +
  geom_sf(data = Future,
  aes(colour = "Future"), show.legend = "point", size = 4) +
  geom_sf(data = Reserve,
  aes(colour = "Reserve"), show.legend = "point", size = 4) +
  geom_sf(data = Harvestable,
  aes(colour = "Harvestable"), show.legend = "point", size = 4) +
  geom_sf(data = HarvestableUp,
  aes(colour = "HarvestableUp"), show.legend = "point", size = 4) +
  geom_sf(data = Selected,
  aes(colour = "Selected"), show.legend = "point") +
  geom_sf(data = ProbedHollow,
  aes(colour = "Probed hollow"), show.legend = "point") +

  scale_colour_manual(values = c("Non-harvestable" = "grey",
  "Visible defect" = "pink", "Harvestable" = "skyblue",
  "HarvestableUp" = "blue", "Selected" = "red", "Future" = "orange",
  "Reserve" = "purple", "Probed hollow" = "forestgreen")) +
  labs(color = "Logging status")

}
\seealso{
\code{\link{Paracou6_2016}}, \code{\link{SpeciesCriteria}},
\code{\link{DTMParacou}}, \code{\link{PlotSlope}},
\code{\link{loggingparameters}}
}
